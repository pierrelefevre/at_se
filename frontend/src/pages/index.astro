---
const startTimer = Date.now();

import Layout from "../layouts/Layout.astro";

import { getGroups, getDigest, registerEvent } from "../db/db";

let groups = await getGroups();

const numStories = groups.reduce((acc, group) => {
  return acc + group.stories.length;
}, 0);

let digest = await getDigest();

registerEvent("pageview", "index");
---

<Layout title="åt.se">
  <p class="text-3xl font-black text-white">NYHETSLÄGET</p>
  <p class="text-white whitespace-pre-wrap my-8">
    {digest?.digest}
  </p>
  <hr class="h-px my-8 border-0 bg-gray-500" />

  {
    groups.map((group, index) => (
      <div class="mb-5">
        <p class="text-3xl font-black text-white">{group.name.toUpperCase()}</p>
        {group.stories.map((story, i) => {
          if (!story?.summary) return null;

          return (
            <a href={"/stories/" + story.id}>
              <div class="text-xl text-white font-semibold my-8 flex flex-col">
                <p transition:name={"story-title" + story?.id}>
                  {story?.summary?.title}
                </p>
                <div
                  class="my-2 flex justify-start items-center space-x-2"
                  transition:name={"story-meta" + story?.id}
                >
                  <small class="font-light text-white text-sm">
                    {story?.published_at.replace("T", " ").split(".")[0]}
                  </small>
                  <small class="font-light text-gray-500 text-sm">-</small>
                  <small class="font-light text-white text-sm">
                    {story?.category}
                  </small>
                  {story?.summary?.importance && (
                    <>
                      <small class="font-light text-gray-500 text-sm">-</small>
                      <small class="font-light text-white text-sm">
                        {story?.summary?.importance}
                      </small>
                    </>
                  )}
                </div>

                <span
                  class="text-base font-normal"
                  transition:name={"story-body" + story?.id}
                >
                  {story?.summary?.body.split(" ").slice(0, 20).join(" ") +
                    "..."}
                </span>
              </div>
            </a>
          );
        })}
        {index < groups.length - 1 && (
          <hr class="h-px my-8  border-0 bg-gray-500" />
        )}
      </div>
    ))
  }

  <p class="text-sm text-gray-500 font-light">
    Loaded {groups.length} groups and {numStories} stories in {
      Date.now() - startTimer
    } ms
  </p>
</Layout>
