---
const startTimer = Date.now();

import Layout from "../layouts/Layout.astro";

import { getGroups, getDigest } from "../db/db";

let groups = await getGroups();

const numStories = groups.reduce((acc, group) => {
  return acc + group.stories.length;
}, 0);

let digest = await getDigest();
---

<Layout title="Ã¥t.se">
  <div class="p-6 mb-10 border rounded-lg shadow bg-gray-800 border-gray-700">
    <a href="#">
      <h5 class="mb-2 text-2xl font-bold tracking-tight text-white">
        ðŸŽ‰ Vinnare av Schibsted Power of Journalism
      </h5>
    </a>
    <p class="mb-3 font-normal text-gray-400">
      Juryns motivering:<br />
       â€˜Open source and AI in the journalism of the futureâ€™ is an idea and a
      project that unites new technology and journalism with the aim of
      revolutionising personalisation and transparency. Itâ€™s exciting. Itâ€™s
      engaging. And it is a curious step that explores the possibilities of
      journalism in the future.
    </p>
    <a
      href="https://www.linkedin.com/feed/update/urn:li:activity:7133496544896397312/"
      target="_blank"
      rel="noopener noreferrer"
      class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white rounded-lg focus:ring-4 focus:outline-none bg-blue-600 hover:bg-blue-700 focus:ring-blue-800"
    >
      LÃ¤s mer
      <svg
        class="rtl:rotate-180 w-3.5 h-3.5 ms-2"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 14 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M1 5h12m0 0L9 1m4 4L9 9"></path>
      </svg>
    </a>
  </div>

  <p class="text-3xl font-black text-white">NYHETSLÃ„GET</p>
  <p class="text-white whitespace-pre-wrap my-8">
    {digest?.digest}
  </p>
  <hr class="h-px my-8 border-0 bg-gray-500" />

  {
    groups.map((group, index) => (
      <div class="mb-5">
        <p class="text-3xl font-black text-white">{group.name.toUpperCase()}</p>
        {group.stories.map((story, i) => {
          if (!story?.summary) return null;

          return (
            <a href={"/stories/" + story.id}>
              <div class="text-xl text-white font-semibold my-8 flex flex-col">
                <p transition:name={"story-title" + story?.id}>
                  {story?.summary?.title}
                </p>
                <div
                  class="my-2 flex justify-start items-center space-x-2"
                  transition:name={"story-meta" + story?.id}
                >
                  <small class="font-light text-white text-sm">
                    {story?.published_at.replace("T", " ").split(".")[0]}
                  </small>
                  <small class="font-light text-gray-500 text-sm">-</small>
                  <small class="font-light text-white text-sm">
                    {story?.category}
                  </small>
                  {story?.summary?.importance && (
                    <>
                      <small class="font-light text-gray-500 text-sm">-</small>
                      <small class="font-light text-white text-sm">
                        {story?.summary?.importance}
                      </small>
                    </>
                  )}
                </div>

                <span
                  class="text-base font-normal"
                  transition:name={"story-body" + story?.id}
                >
                  {story?.summary?.body.split(" ").slice(0, 20).join(" ") +
                    "..."}
                </span>
              </div>
            </a>
          );
        })}
        {index < groups.length - 1 && (
          <hr class="h-px my-8  border-0 bg-gray-500" />
        )}
      </div>
    ))
  }

  <p class="text-sm text-gray-500 font-light">
    Loaded {groups.length} groups and {numStories} stories in {
      Date.now() - startTimer
    } ms
  </p>
</Layout>
