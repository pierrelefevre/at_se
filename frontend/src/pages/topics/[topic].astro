---
const startTimer = Date.now();

import { getStoriesByTopic } from "../../db/db";
import Layout from "../../layouts/Layout.astro";
import topics from "../../db/topics.json";

const { topic } = Astro.params;

// check that topic is in topics
const filtered = topics.filter(
  (t) =>
    encodeURIComponent(t.toLowerCase()) ===
    encodeURIComponent(topic.toLowerCase()),
);

if (filtered.length === 0) {
  return Astro.redirect("/");
}

let from = Astro.url.searchParams.get("from") || 0;

let pageLength = 30;
let stories = await getStoriesByTopic(filtered[0], parseInt(from), pageLength);

import { registerEvent } from "../../db/db";
registerEvent("pageview", "topics/" + topic);
---

<Layout title={"åt.se | " + topic}>
  <span class="text-5xl font-bold text-white mb-10">
    {stories[0].category}
  </span>

  <hr class="h-px my-8 border-0 bg-gray-500" />
  {
    stories.map(
      (story) =>
        story.summary && (
          <a href={"/stories/" + story.id}>
            <div class="text-xl text-white font-semibold my-8 flex flex-col">
              <p transition:name={"title" + story?.id}>
                {story?.summary?.title}
              </p>

              <div class="my-2 flex justify-start items-center space-x-2">
                <small class="font-light text-white text-sm">
                  {story?.published_at.replace("T", " ").split(".")[0]}
                </small>
                <small class="font-light text-gray-500 text-sm">-</small>
                <small class="font-light text-white text-sm">
                  {story?.category}
                </small>
                {story?.summary?.importance && (
                  <>
                    <small class="font-light text-gray-500 text-sm">-</small>
                    <small class="font-light text-white text-sm">
                      {story?.summary?.importance}
                    </small>
                  </>
                )}
              </div>

              <span class="text-base font-normal text-gray-300">
                {story?.summary?.body.split(" ").slice(0, 20).join(" ") + "..."}
              </span>
            </div>
          </a>
        ),
    )
  }

  <div class="inline-flex rounded-md shadow-sm">
    <a
      href={`/topics/${topic}?from=${Math.max(parseInt(from) - pageLength, 0)}`}
      class={"px-4 py-2 text-sm font-medium border rounded-l-lg focus:z-10 focus:ring-2 bg-gray-700 border-gray-600 text-white hover:text-white hover:bg-gray-600 focus:ring-blue-500 focus:text-white " +
        (from == 0 ? "opacity-50 cursor-not-allowed" : "")}
    >
      &lt; Nyare
    </a>
    <a
      href={stories.length < pageLength
        ? ""
        : `/topics/${topic}?from=${parseInt(from) + pageLength}`}
      class={"px-4 py-2 text-sm font-medium border rounded-r-md focus:ring-2 bg-gray-700 border-gray-600 text-white hover:text-white hover:bg-gray-600 focus:ring-blue-500 focus:text-white " +
        (stories.length < pageLength ? "opacity-50 cursor-not-allowed" : "")}
    >
      Äldre &gt;
    </a>
  </div>

  <p class="text-sm text-gray-500 font-light mt-10">
    Loaded {stories.length} stories with topic "{topic}" in {
      Date.now() - startTimer
    } ms
  </p>
</Layout>
