---
const startTimer = Date.now();

import { getStoriesByTopic } from "../../db/db";
import Layout from "../../layouts/Layout.astro";
import topics from "../../db/topics.json";

const { topic } = Astro.params;

// check that topic is in topics
const filtered = topics.filter(
  (t) =>
    encodeURIComponent(t.toLowerCase()) ===
    encodeURIComponent(topic.toLowerCase()),
);

if (filtered.length === 0) {
  return Astro.redirect("/");
}

let stories = await getStoriesByTopic(topic);

---

<Layout title={"Ã¥t.se | " + topic} >
  <span class="text-5xl font-bold text-white mb-10">
    {stories[0].category}
  </span>

  <hr class="h-px my-8 border-0 bg-gray-500" />
  {
    stories.map(
      (story) =>
        story.summary && (
          <a href={"/stories/" + story.id}>
            <div class="text-xl text-white font-semibold my-8 flex flex-col">
              <p>{story?.summary?.title}</p>
              
              <div class="my-2 flex justify-start items-center space-x-2">
                  <small class="font-light text-white text-sm">
                    {story?.published_at.replace("T", " ").split(".")[0]}
                  </small>
                  <small class="font-light text-gray-500 text-sm">-</small>
                  <small class="font-light text-white text-sm">
                    {story?.category}
                  </small>
                  {story?.importance &&
                    <small class="font-light text-gray-500 text-sm">-</small>
                    <small class="font-light text-white text-sm">
                      {story?.importance}
                    </small>
                  }
                </div>

              <span class="text-base font-normal text-gray-300">
                {story?.summary?.body.split(" ").slice(0, 20).join(" ") + "..."}
              </span>
            </div>
          </a>
        ),
    )
  }

  <p class="text-sm text-gray-500 font-light">
    Loaded {stories.length} stories with topic "{topic}" in {Date.now() - startTimer} ms
  </p>
</Layout>